{"version":3,"sources":["style/sidebar.module.scss","style/skill.module.scss","style/app.module.scss","images/profile-image.jpeg","components/core/Link.tsx","components/core/Icons.tsx","components/Sidebar.tsx","components/Contacts.tsx","components/core/DescriptionRow.tsx","components/Skill.tsx","components/Experience.tsx","components/Education.tsx","App.tsx","serviceWorker.ts","index.tsx","style/common.module.scss"],"names":["module","exports","Link","link","children","href","target","startsWith","undefined","rel","Icon","size","prefix","iconName","color","icon","findIconDefinition","EnvelopeIcon","LinkedinIcon","GithubIcon","FacebookIcon","sections","label","key","links","Sidebar","useTranslation","t","className","sidebarStyle","container","Image","src","profile_image","thumbnail","ListGroup","sectionList","variant","map","s","Item","linkList","l","h1Style","fontSize","margin","Contacts","Card","border","commonStyle","darkBackground","id","Header","style","Body","DescriptionRow","description","translate","tLabel","tDescription","Row","Col","sm","primaryColor","formatSkill","skills","skillStyle","code","highlight","substring","reduce","prev","curr","software","architecture","tools","Skill","e","experiences","from","to","company","role","Experience","education","institute","qualification","Education","App","useState","window","innerWidth","setWindowWidth","handleWindowResize","useEffect","addEventListener","removeEventListener","Container","fluid","appStyle","md","sidebar","span","offset","Boolean","location","hostname","match","i18next","use","LanguageDetector","init","interpolation","escapeValue","lng","resources","en","common","common_eng","it","common_ita","library","add","fas","far","fab","ReactDOM","render","I18nextProvider","i18n","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95638397.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sidebar_container__E3Tjk\",\"linkList\":\"sidebar_linkList__3omJ1\",\"sectionList\":\"sidebar_sectionList__2cw_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"skill_code__33IH4\",\"highlight\":\"skill_highlight__3ZM-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3hANb\",\"sidebar\":\"app_sidebar__35YH-\"};","module.exports = __webpack_public_path__ + \"static/media/profile-image.426d13d8.jpeg\";","import React from 'react';\n\ninterface LinkProps {\n  link: string;\n}\n\nconst Link:React.FC<LinkProps> = ({link, children}) => (\n  <a href={link}\n    target={link.startsWith('#') ? undefined : \"_blank\"}\n    rel={link.startsWith('#') ? undefined : \"noopener noreferrer\"}\n  >\n    {children}\n  </a>\n);\n\nexport default Link;\n\n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { findIconDefinition, SizeProp, IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\n\ninterface IconProps {\n  color?: string;\n  size?: SizeProp;\n}\n\ninterface AbstractIconProps extends IconProps {\n  prefix: IconPrefix;\n  iconName: IconName;\n}\n\nconst SOLID = 'fas';\n// const REGULAR = 'far';\nconst BRAND = 'fab';\n\n// Wrapper per icone FontAwesome\nconst Icon: React.FC<AbstractIconProps> = ({ size, prefix, iconName, color }) => (\n  <FontAwesomeIcon color={color} size={size} icon={findIconDefinition({ prefix, iconName })} />\n);\n\n\n// Icons\n//## Solid\nexport const EnvelopeIcon: React.FC<IconProps> = ({ size='2x', color='white' }) => (\n  <Icon size={size}  color={color} prefix={SOLID} iconName=\"envelope\" />\n);\n\n//## Brand\nexport const LinkedinIcon: React.FC<IconProps> = ({ size='2x', color='white' }) => (\n    <Icon size={size}  color={color} prefix={BRAND} iconName=\"linkedin-in\" />\n);\nexport const GithubIcon: React.FC<IconProps> = ({ size='2x', color='white' }) => (\n    <Icon size={size}  color={color} prefix={BRAND} iconName=\"github-alt\" />\n);\nexport const FacebookIcon: React.FC<IconProps> = ({ size='2x', color='white' }) => (\n    <Icon size={size}  color={color} prefix={BRAND} iconName=\"facebook-f\" />\n);\n","import React from 'react';\nimport { Image, ListGroup } from 'react-bootstrap';\nimport Link from './core/Link';\nimport {useTranslation} from \"react-i18next\";\n// Immagine profilo\nimport profile_image from '../images/profile-image.jpeg';\nimport { EnvelopeIcon, LinkedinIcon, FacebookIcon, GithubIcon } from './core/Icons';\n\n// Style\nimport sidebarStyle from '../style/sidebar.module.scss';\n\n// Interface\ninterface SidebarProps {}\n\nconst sections = [\n  { link :'#Home',label:'sidebar.home', key:'key_Home'},\n  { link :'#Experience',label:'sidebar.experience',key:'key_Experience' },\n  { link :'#Education',label:'sidebar.education',key:'key_Education' },\n  { link :'#Skill',label:'sidebar.skill',key:'key_Skill' },\n  { link :'#Portfolio',label:'sidebar.portfolio',key:'key_Portfolio' },\n  { link :'#Contacts',label:'sidebar.contacts',key:'key_Contacts' }\n]\n\nconst links = [\n  { link:'https://www.facebook.com/paolo.cattani.9',icon:<FacebookIcon />,key:'key_Facebook'},\n  { link:'https://github.com/paolocattani',icon:<GithubIcon />,key:'key_Github'},\n  { link:'https://www.linkedin.com/in/paolo-cattani-5913a5127/',icon:<LinkedinIcon />,key:'key_Linkedin'},\n  { link:'mailto:paolocattani0501@gmail.com',icon:<EnvelopeIcon />,key:'key_Mail'}\n\n]\n\nconst Sidebar: React.FC<SidebarProps> = () => {\n  const [t] = useTranslation('common');\n\n  return (\n    <div className={sidebarStyle.container}>\n      {/* Image */}\n      <Image src={profile_image} thumbnail />\n\n      {/* Name */}\n      <h2 ><i><b> Paolo Cattani </b></i></h2>\n      <h5 ><i>paolocattani0501@gmail.com</i></h5>\n\n      {/* List */}\n      <ListGroup className={sidebarStyle.sectionList} variant=\"flush\">\n        { sections.map(s => <ListGroup.Item key={s.key}><Link link={s.link}> {t(s.label)}</Link></ListGroup.Item> )}\n      </ListGroup>\n\n      {/* External Link */}\n      <div className={sidebarStyle.linkList}>\n        {links.map(l => <Link key={l.key} link={l.link}>{l.icon}</Link> )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n\n","import React,{CSSProperties} from 'react';\nimport { Card } from 'react-bootstrap';\nimport commonStyle from '../style/common.module.scss'\n// Props interface\ninterface HomeProps {}\n\nconst h1Style:CSSProperties = { color: 'yellow', fontSize: '6vh', margin:'10vh auto'};\nconst Contacts:React.FC<HomeProps> = () =>\n    <Card border={'warning'} className={`text-center my-4 mx-auto ${commonStyle.darkBackground}`} id={'Contacts'}>\n        <Card.Header className=\"text-white\">\n          <h1 style={h1Style}>\n              <em><b>Work in progress !</b></em>\n            </h1>\n        </Card.Header>\n        <Card.Body className=\"text-white\">\n          <p><cite><strong>\n            La programmazione è una delle mie passioni e per questo non smetto mai di studiare ed apprendere nuove competenze.\n            Conosco molto bene Java ( SE, EE ) e ho lavorato con Hibernate ( 4 e 5 ), Struts2 e Spring. In generale me la cavo bene con i Db relazionali ( DB2 , MS Sql, mySql/maria , Oracle ), meno con No-Sql .\n            Negli ultimi anni sto utilizzando molto l'ecosistema React/ Nodejs ( React / Redux / Redux-Saga/ Nodejs / Express , Sequelize ) quindi ho una buona conoscenza di javascript , typescript, CSS e HTML, ( utilizzo sempre le piu recenti funzionalità grazie a Babel )\n            In fine conosco la parte di infrastruttura ( JBoss da 6.4 a Wildfly 16 , Tomcat, Nginx ) , CI/CD ( Gitlab Runners su Docker ) e Container( per architetture a Microservizi e MicroFrontend ).\n            </strong></cite></p>\n        </Card.Body>\n      </Card>\n\nexport default  Contacts;","import React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport { Col, Row } from 'react-bootstrap';\nimport commonStyle from '../../style/common.module.scss';\n\ninterface DescriptionRowProps {\n  label: string;\n  description? : string | JSX.Element;\n  translate:boolean;\n}\n\nconst DescriptionRow:React.FC<DescriptionRowProps> = ({label,description, translate}) => {\n    const [t] = useTranslation('common');\n    const tLabel = t(label);\n    const tDescription = description && translate && typeof description === 'string' ? t(description) : description ;\n    return (\n        <Row className={`mb-0`}>\n            <Col sm={3} className={'border-right border-secondary text-white text-right pr-4 ' }>\n                {description ? <em>{tLabel}</em> : <h2 className={commonStyle.primaryColor}>{tLabel}</h2>}\n            </Col>\n            {tDescription ? <Col sm={7} className={'text-justify text-white '}>\n                {tDescription}\n            </Col> : null }\n        </Row>\n    );\n}\n\nexport default DescriptionRow;\n\n\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport commonStyle from '../style/common.module.scss'\nimport skillStyle from '../style/skill.module.scss'\nimport DescriptionRow from './core/DescriptionRow';\n\ninterface SkillProps {}\n\ninterface Skill {\n  label : string,\n  description?:string | JSX.Element\n}\n\n \nconst formatSkill= (skills:Array<string>):JSX.Element  => <p>{\n  skills.map<React.ReactNode>(s=> (\n        <code className={s.startsWith('<h>') ?  `${skillStyle.code} ${skillStyle.highlight}`: `${skillStyle.code}`}>{\n          s.startsWith('<h>') ? s.substring(3):s}\n        </code>\n  )).reduce((prev, curr) => [prev, ' <|> ', curr])}</p>;\n\nconst software:Array<Skill> = [\n  {label:'Software'},\n  {label:'FrontEnd', description: formatSkill(['HTML','CSS','SCSS','Javascript','<h>Typescript','<h>Reactjs'])},\n  {label:'BackEnd', description: formatSkill(['<h>Java EE/Jackarta','NodeJs','Maven','Struts2','Hibernate'])},\n  {label:'Database', description:formatSkill(['IBM Db2','MS Sql Server','Oracle','Postgres','mysql','maria'])},\n  {label:'Sql', description:formatSkill(['Sql','<h>PL/SQL','T-SQL'])},\n  {label:'Pattern Architetturali', description:formatSkill(['SOA (SOAP/WSLD, RESTful)','MVC','DDD','Client-Server','Event-source (WebSocket/SSE)'])},\n  {label:'Design Pattern', description:formatSkill(['Singleton','Builder','Decorator','Observer'])},\n  {label:'Shell Script', description:formatSkill(['Batch ( Windows )','Bash ( Unix )'])},\n  {label:'Altro', description:formatSkill(['Markdown'])},\n];\n\nconst architecture:Array<Skill> =[\n  {label:'Architettura'},\n  {label:'Containerizzazione', description: formatSkill(['Docker'])},\n  {label:'Sistemi Operativi', description:formatSkill(['Windowx','<h>Linux','WSL'])},\n]\n\nconst tools:Array<Skill> = [\n  {label:'Tools'},\n  {label:'Application Server',description:formatSkill(['Tomcat','Nginx','<h>Jboss/Wildfly'])},\n  {label:'IDE', description:formatSkill(['Eclipse','MyEclipse','VsCode'])},\n  {label:'Client SSH', description:formatSkill(['Bitvise ','Putty','MRemoteNG'])},\n  {label:'Sql Client', description:formatSkill(['<h>Dbeaver ','Squirrel','Sessione 5250 ( IBM )'])},\n  {label:'Utility', description:formatSkill(['WSL','Typora','Keepass','<h>Ditto','BeefText','Notepad++','Atom'])},\n];\n\nconst Skill:React.FC<SkillProps> = () =>\n  <Card border={'warning'} className={`text-center my-4 mx-auto ${commonStyle.darkBackground}`} id={'Skill'}>\n    <Card.Header className={'text-white'}>\n      <h1><b> Competenze tecniche  </b></h1>\n    </Card.Header>\n    <Card.Body>\n      { software.map( e => ( <DescriptionRow label={e.label}  translate={false} description={e.description}/> ))}\n      <hr />\n      { architecture.map( e => ( <DescriptionRow label={e.label}  translate={false} description={e.description}/> ))}\n      <hr />\n      { tools.map( e => ( <DescriptionRow label={e.label}  translate={false} description={e.description}/> ))}\n    </Card.Body>\n  </Card>;\n\nexport default Skill;\n\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport commonStyle from '../style/common.module.scss'\nimport DescriptionRow from './core/DescriptionRow';\n\ninterface ExperienceProps {}\n\ninterface Experience {\n  from :string,\n  to:string | null,\n  company:string,\n  role:string,\n  description:string | JSX.Element\n}\n\nconst experiences:Array<Experience> = [{\n    from: 'Settembre 2019',\n    to:null,\n    company:'E.B.S. Consulting s.r.l.',\n    role:'Full-Stack dev',\n    description:<p>Full-Stack developer : Devops ( Docker, CI, CD GitLab ), BackEnd ( Java EE/jakarta, hiberante, Struts2 ).<br/>\n    Web ( Java jsp, HTML, CSS, javascript )</p>\n  },{\n    from: 'Luglio 2015',\n    to: 'Agosto 2019',\n    company:'Sanmarco Informatica SPA ',\n    role:'Developer',\n    description:<p>Analisi e sviluppo personalizzazioni software per ciascun cliente. Utilizzo linguaggio SQL/RPGILE su server IBM.\n    Personalizzazioni lato client in linguaggio Java; installazione e gestione VM Windows e Linux per software integrativi al gestionale.\n    Organizzazione lavoro tramite metodo Agile</p>\n  }\n];\n\nconst Experience:React.FC<ExperienceProps> = () =>\n        <Card border={'warning'} className={`text-center ${commonStyle.darkBackground}`} id={'Experience'}>\n          <Card.Header className={'text-white'}>\n            <h1>\n              <b> Esperienza Lavorativa </b>\n            </h1>\n          </Card.Header>\n          <Card.Body>\n            {\n              experiences.map( e => (\n                <>\n                  <DescriptionRow label=\"Da - A\"  translate={false} description={e.to !=null ? `${e.from} - ${e.to} `:`${e.from} - Oggi` }/>\n                  <DescriptionRow label=\"Azienda\" translate={false} description={e.company}/>\n                  <DescriptionRow label=\"Ruolo\"   translate={false} description={e.role}/>\n                  <DescriptionRow label=\"Impiego\" translate={false} description={e.description}/>\n                </>\n              ))}\n          </Card.Body>\n        </Card>;\n\nexport default Experience;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport commonStyle from '../style/common.module.scss'\nimport DescriptionRow from './core/DescriptionRow';\n\ninterface EducationProps {}\n\ninterface Education {\n  from :string,\n  to:string | null,\n  institute:string,\n  qualification?:string,\n  description:string | JSX.Element\n}\n\nconst education:Array<Education> = [{\n    from: 'Ottobre 2010',\n    to: 'Sospeso',\n    institute:'Università degli Studi di Padova – Ingegneria Informatica',\n    description:<p>Java, architettura degli elaboratori, matematica discreta e probabilità, analisi matematica, algebra lineare e geometria, fisica, elettrotecnica.</p>\n  },{\n    from: 'Settembre 2004',\n    to: 'Luglio 2010',\n    institute:'ITIS A.Meucci – Elettronica e Telecomunicazioni',\n    qualification:'Perito in Elettronica e Telecomunicazioni (78/100)',\n    description:<p>Telecomunicazioni generali (antenne, linee, sistemi digitali, codifiche, PCM, trasmissioni terrestri e satellitari), \n      elettronica, sistemi automatici, disegno e realizzazione di schemi elettronici (PCB), programmazione C++ e Assembly</p>\n  }\n];\n\nconst Education:React.FC<EducationProps> = () =>\n  <Card border={'warning'} className={`text-center my-4 mx-auto ${commonStyle.darkBackground}`} id={'Education'}>\n    <Card.Header className={'text-white'}>\n      <h1>\n        <b> Istruzione e Formazione </b>\n      </h1>\n    </Card.Header>\n    <Card.Body>\n      {\n        education.map( e => (\n          <>\n            <DescriptionRow label=\"Da - A\"  translate={false} description={e.to !=null ? `${e.from} - ${e.to} `:`${e.from} - Oggi` }/>\n            <DescriptionRow label=\"Istituto\" translate={false} description={e.institute}/>\n            { e.qualification ?  <DescriptionRow label=\"Qualifica\"   translate={false} description={e.qualification}/> : null}\n            <DescriptionRow label=\"Argomenti di studio\" translate={false} description={e.description}/>\n          </>\n        ))}\n    </Card.Body>\n  </Card>;\n\nexport default Education;","// React\nimport React, { useEffect, useState } from 'react';\n\n// Boostrap\nimport { Container, Col, Row } from 'react-bootstrap';\n// Components\nimport { Sidebar, Contacts, Experience, Education, Skill } from './components';\n\n// Style\nimport appStyle from './style/app.module.scss';\n\n// Application\nconst App: React.FC = () => {\n  const [, setWindowWidth] = useState(window.innerWidth);\n  const handleWindowResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  });\n\n  return (\n    <Container fluid className={appStyle.container}>\n      <Row>\n        <Col md={2} className={appStyle.sidebar}>\n          <Sidebar/>\n        </Col>\n        <Col md={{span: 8,offset:3}}>\n          <Contacts />\n          <Experience />\n          <Education />\n          <Skill />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// React\nimport React,{StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\n// Components\nimport App from './App';\n\n// FontAwesome 5\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n// i18n\nimport i18next from \"i18next\";\nimport {I18nextProvider} from \"react-i18next\";\nimport common_eng from \"./translations/en-US/common.json\";\nimport common_ita from \"./translations/it-IT/common.json\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// Service Worker\nimport * as serviceWorker from './serviceWorker';\n\ni18next.use(LanguageDetector).init({\n    interpolation: { escapeValue: false },\n    lng: 'it',\n    resources: {\n        en: {\n            common : common_eng\n        },\n        it: {\n            common : common_ita\n        },\n    },\n});\n\nlibrary.add(fas, far, fab);\n\nReactDOM.render(\n    <StrictMode>\n        <I18nextProvider i18n={i18next}>\n            <App />\n        </I18nextProvider>\n    </StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBackground\":\"common_darkBackground__3hkRF\",\"primaryColor\":\"common_primaryColor__-TCWH\"};"],"sourceRoot":""}